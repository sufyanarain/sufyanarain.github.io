{
    "version": 3,
    "sources": [
        "logo.svg",
        "components/firebase.js",
        "pages/signin/SignIn.js",
        "pages/signup/Signup.js",
        "components/Nav/Nav.js",
        "pages/home/userCard/UserCard.js",
        "components/context/CurrentUserContext.js",
        "pages/home/Home.js",
        "pages/settings/ProfileUpload.js",
        "pages/settings/SettingCard.js",
        "pages/settings/Settings.js",
        "routes/Routes.js",
        "components/context/AuthContext.js",
        "App.js",
        "reportWebVitals.js",
        "index.js"
    ],
    "names": [
        "app",
        "initializeApp",
        "apiKey",
        "authDomain",
        "projectId",
        "storageBucket",
        "messagingSenderId",
        "appId",
        "auth",
        "getAuth",
        "db",
        "getFirestore",
        "storage",
        "onAuthStateChanged",
        "getStorage",
        "SignIn",
        "navigate",
        "useNavigate",
        "span",
        "offset",
        "style",
        "marginTop",
        "name",
        "labelCol",
        "wrapperCol",
        "initialValues",
        "remember",
        "onFinish",
        "values",
        "signInWithEmailAndPassword",
        "email",
        "password",
        "then",
        "userCredential",
        "user",
        "console",
        "log",
        "catch",
        "error",
        "code",
        "message",
        "onFinishFailed",
        "errorInfo",
        "autoComplete",
        "Item",
        "label",
        "rules",
        "required",
        "Password",
        "type",
        "htmlType",
        "to",
        "marginLeft",
        "Signup",
        "createUserWithEmailAndPassword",
        "setDoc",
        "doc",
        "uid",
        "username",
        "localStorage",
        "setItem",
        "JSON",
        "stringify",
        "Nav",
        "Menu",
        "SubMenu",
        "useState",
        "current",
        "setCurrent",
        "onClick",
        "e",
        "key",
        "selectedKeys",
        "mode",
        "icon",
        "HomeOutlined",
        "SettingOutlined",
        "Meta",
        "Card",
        "UserCard",
        "props",
        "userObj",
        "getItem",
        "parse",
        "imgURL",
        "setImgURL",
        "useEffect",
        "getDownloadURL",
        "ref",
        "url",
        "xhr",
        "XMLHttpRequest",
        "responseType",
        "onload",
        "event",
        "response",
        "open",
        "send",
        "hoverable",
        "width",
        "cover",
        "className",
        "alt",
        "src",
        "title",
        "description",
        "CurentUserContext",
        "React",
        "createContext",
        "Home",
        "useContext",
        "getUsers",
        "setGetusers",
        "onSnapshot",
        "data",
        "ProfileUpload",
        "AntForm",
        "useForm",
        "form",
        "onReset",
        "resetFields",
        "layout",
        "file",
        "upload",
        "originFileObj",
        "storageRef",
        "imagesRef",
        "fileName",
        "spaceRef",
        "imagesRefAgain",
        "fullPath",
        "parent",
        "storageRef1",
        "uploadBytes",
        "snapshot",
        "valuePropName",
        "getValueFromEvent",
        "Array",
        "isArray",
        "fileList",
        "listType",
        "accept",
        "multiple",
        "maxCount",
        "UploadOutlined",
        "marginRight",
        "Paragraph",
        "Typography",
        "SettingCard",
        "uName",
        "uEmail",
        "setName",
        "setEmail",
        "updateName",
        "setUpdateName",
        "updateEmail",
        "setUpdateEmail",
        "usersRef",
        "merge",
        "editable",
        "onChange",
        "Settings",
        "Routes",
        "path",
        "element",
        "AuthContext",
        "isLoggedIn",
        "App",
        "firebseAuth",
        "setFirebaseAuth",
        "currentUser",
        "setCurrentUser",
        "Provider",
        "value",
        "reportWebVitals",
        "onPerfEntry",
        "Function",
        "getCLS",
        "getFID",
        "getFCP",
        "getLCP",
        "getTTFB",
        "ReactDOM",
        "render",
        "document",
        "getElementById"
    ],
    "mappings": "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",
    "file": "static/js/main.a04717e0.chunk.js",
    "sourcesContent": [
        "export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";",
        "import { initializeApp } from 'firebase/app';\r\nimport { getFirestore } from 'firebase/firestore'\r\nimport { getAuth, onAuthStateChanged } from \"firebase/auth\";\r\nimport { getStorage } from \"firebase/storage\";\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyAV2Z81gGjs0lSAA0Iu2ir0vHfJkFJiSfI\",\r\n    authDomain: \"friends-app-f3d94.firebaseapp.com\",\r\n    projectId: \"friends-app-f3d94\",\r\n    storageBucket: \"friends-app-f3d94.appspot.com\",\r\n    messagingSenderId: \"1055832447705\",\r\n    appId: \"1:1055832447705:web:58f8da5a499b28771f3cc8\"\r\n};\r\n\r\n// firebase.initializeApp(firebaseConfig)\r\n// const storage = firebase.storage()\r\nconst app = initializeApp(firebaseConfig);\r\nconst auth = getAuth(app);\r\nconst db = getFirestore(app);\r\nconst stateChange = onAuthStateChanged;\r\nconst storage = getStorage(app);\r\n\r\n\r\nexport { firebaseConfig, auth,storage, db, stateChange }",
        "import React from 'react'\r\nimport { Form, Input, Button } from 'antd';\r\nimport { Row, Col } from 'antd';\r\nimport { getAuth, signInWithEmailAndPassword } from \"firebase/auth\";\r\nimport { auth } from '../../components/firebase';\r\nimport { Link ,useNavigate} from \"react-router-dom\";\r\n\r\nconst SignIn = () => {\r\n    let navigate = useNavigate();\r\n    const onFinish = (values) => {\r\n        signInWithEmailAndPassword(auth, values.email, values.password)\r\n            .then((userCredential) => {\r\n                // Signed in \r\n                const user = userCredential.user;\r\n                console.log(user)\r\n                navigate('/home')\r\n                // ...\r\n            })\r\n            .catch((error) => {\r\n                const errorCode = error.code;\r\n                const errorMessage = error.message;\r\n            });\r\n        console.log('Success:', values);\r\n    };\r\n\r\n    const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n    return (\r\n        <>\r\n            <Row >\r\n                <Col span={12} offset={4} >\r\n                    <Form\r\n                        style={{ marginTop: 140 }}\r\n                        name=\"basic\"\r\n                        labelCol={{ span: 8 }}\r\n                        wrapperCol={{ span: 16 }}\r\n                        initialValues={{ remember: true }}\r\n                        onFinish={onFinish}\r\n                        onFinishFailed={onFinishFailed}\r\n                        autoComplete=\"off\"\r\n                    >\r\n                        \r\n\r\n                        <Form.Item\r\n                            label=\"Email\"\r\n                            name=\"email\"\r\n                            rules={[{ required: true, message: 'Please input your email!' }]}\r\n                        >\r\n                            <Input />\r\n                        </Form.Item>\r\n\r\n                        <Form.Item\r\n                            label=\"Password\"\r\n                            name=\"password\"\r\n                            rules={[{ required: true, message: 'Please input your password!' }]}\r\n                        >\r\n                            <Input.Password />\r\n                        </Form.Item>\r\n\r\n\r\n\r\n                        <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\r\n                            <Button type=\"primary\" htmlType=\"submit\">\r\n                                Signin\r\n                            </Button>\r\n                            <Link to=\"signup\"><Button style={{marginLeft:10}} >\r\n                                Sign up\r\n                            </Button></Link>\r\n\r\n                        </Form.Item>\r\n                    </Form>\r\n\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SignIn\r\n",
        "import React from 'react'\r\nimport { Form, Input, Button } from 'antd';\r\nimport { Row, Col } from 'antd';\r\nimport { getAuth, createUserWithEmailAndPassword } from \"firebase/auth\";\r\nimport { auth, storage } from '../../components/firebase';\r\nimport { db } from '../../components/firebase';\r\nimport { doc, setDoc } from \"firebase/firestore\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\n\r\nconst Signup = () => {\r\n    let navigate = useNavigate();\r\n    const onFinish = (values) => {\r\n        createUserWithEmailAndPassword(auth, values.email, values.password)\r\n            .then((userCredential) => {\r\n                // Signed in \r\n                const user = userCredential.user;\r\n                console.log(user)\r\n                setDoc(doc(db, \"users\", user.uid), {\r\n                    name: values.username,\r\n                    email: values.email,\r\n                    uid: user.uid\r\n                });\r\n                const uid = user.uid;\r\n                localStorage.setItem('user', JSON.stringify(user))\r\n                navigate('/')\r\n                // ...\r\n            })\r\n            .catch((error) => {\r\n                const errorCode = error.code;\r\n                const errorMessage = error.message;\r\n                // ..\r\n            });\r\n\r\n        console.log('Success:', values);\r\n    };\r\n\r\n    const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    }\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col span={12} offset={4}>\r\n                    <Form\r\n                        style={{ marginTop: 140 }}\r\n                        name=\"basic\"\r\n                        labelCol={{ span: 8 }}\r\n                        wrapperCol={{ span: 16 }}\r\n                        initialValues={{ remember: true }}\r\n                        onFinish={onFinish}\r\n                        onFinishFailed={onFinishFailed}\r\n                        autoComplete=\"off\"\r\n                    >\r\n                        <Form.Item\r\n                            label=\"Username\"\r\n                            name=\"username\"\r\n                            rules={[{ required: true, message: 'Please input your username!' }]}\r\n                        >\r\n                            <Input />\r\n                        </Form.Item>\r\n\r\n\r\n                        <Form.Item\r\n                            label=\"Email\"\r\n                            name=\"email\"\r\n                            rules={[{ required: true, message: 'Please input your email!' }]}\r\n                        >\r\n                            <Input />\r\n                        </Form.Item>\r\n\r\n                        <Form.Item\r\n                            label=\"Password\"\r\n                            name=\"password\"\r\n                            rules={[{ required: true, message: 'Please input your password!' }]}\r\n                        >\r\n                            <Input.Password />\r\n                        </Form.Item>\r\n                    \r\n\r\n\r\n                        <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\r\n                            <Button type=\"primary\" htmlType=\"submit\">\r\n                                Sign up\r\n                            </Button>\r\n                            <Link to=\"/\"><Button style={{ marginLeft: 10 }}>\r\n                                Sign in\r\n                            </Button></Link>\r\n                        </Form.Item>\r\n                    </Form>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Signup\r\n",
        "import React, { useState } from 'react'\r\nimport { Menu } from 'antd';\r\nimport { HomeOutlined, SettingOutlined } from '@ant-design/icons';\r\nimport { Link } from 'react-router-dom';\r\nimport Home from '../../pages/home/Home';\r\nconst { SubMenu } = Menu;\r\n\r\n\r\nconst Nav = () => {\r\n    const [current, setCurrent] = useState('home')\r\n    console.log(current);\r\n\r\n    const handleClick = e => {\r\n        console.log('click ', e);\r\n        setCurrent(e.key);\r\n    };\r\n    return (\r\n        <div>\r\n            <Menu onClick={handleClick} selectedKeys={[current]} mode=\"horizontal\"   >\r\n                <Menu.Item key=\"home\" icon={<HomeOutlined />}>\r\n                   <Link to='/home'>Home</Link>\r\n                </Menu.Item>\r\n                <Menu.Item key=\"settings\" icon={<SettingOutlined />}>\r\n                <Link to='/settings'>Seiitngs</Link>\r\n                </Menu.Item>\r\n            </Menu>\r\n           \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Nav\r\n",
        "import React,{useState,useEffect} from 'react'\r\nimport { Card } from 'antd';\r\nimport { ref, getDownloadURL } from \"firebase/storage\";\r\nimport { storage } from '../../../components/firebase';\r\nconst { Meta } = Card;\r\n\r\nconst UserCard = (props) => {\r\n    let userObj = localStorage.getItem('user')\r\n    userObj = JSON.parse(userObj)\r\n    const [imgURL, setImgURL] = useState('')\r\n    useEffect(() => {\r\n        getDownloadURL(ref(storage, userObj.uid))\r\n            .then((url) => {\r\n                // `url` is the download URL for 'images/stars.jpg'\r\n\r\n                // This can be downloaded directly:\r\n                const xhr = new XMLHttpRequest();\r\n                xhr.responseType = 'blob';\r\n                xhr.onload = (event) => {\r\n                    const blob = xhr.response;\r\n                };\r\n                xhr.open('GET', url);\r\n                xhr.send();\r\n\r\n                // Or inserted into an <img> element\r\n                // const img = document.getElementById('myimg');\r\n                // img.setAttribute('src', url);\r\n                setImgURL(url)\r\n                console.log(url)\r\n            })\r\n            .catch((error) => {\r\n                // Handle any errors\r\n                console.log(error)\r\n            });\r\n\r\n    }, [])\r\n    return (\r\n        <div>\r\n            <Card\r\n                hoverable\r\n                style={{ width: 310 }}\r\n                cover={<img className='userImg' alt=\"example\" src={imgURL} />}\r\n            >\r\n                <Meta title={'Name : '+props.name} description={'Email : '+props.email} />\r\n                <p>hello</p>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserCard\r\n",
        "import React from \"react\";\r\n\r\nconst CurentUserContext = React.createContext({});\r\n\r\nexport default CurentUserContext;\r\n",
        "import React, { useEffect, useContext, useState } from 'react'\r\nimport Nav from '../../components/Nav/Nav'\r\nimport UserCard from './userCard/UserCard'\r\nimport './userCard/userCard.css'\r\nimport { doc, onSnapshot } from \"firebase/firestore\";\r\nimport { db } from '../../components/firebase';\r\n\r\nimport CurentUserContext from '../../components/context/CurrentUserContext';\r\n\r\n\r\nconst Home = () => {\r\n    let userObj = localStorage.getItem('user')\r\n    userObj = JSON.parse(userObj)\r\n\r\n    const currentUserObj = useContext(CurentUserContext)\r\n    const [getUsers, setGetusers] = useState({})\r\n    console.log(\"Current data: \", getUsers)\r\n    // console.log(currentUserObj.uid)\r\n\r\n    useEffect(() => {\r\n        const unsub = onSnapshot(doc(db, \"users\", `${userObj.uid}`), (doc) => {\r\n            if (doc.data()) {\r\n                setGetusers(doc.data())\r\n                // console.log(\"Current data: \", doc.data())\r\n\r\n            }\r\n        });\r\n\r\n    }, [])\r\n    \r\n\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Nav />\r\n            <div className='userCard'>\r\n                <UserCard name={getUsers.name} email={getUsers.email} />\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home\r\n",
        "import React from 'react'\r\nimport { Upload, Button, message } from 'antd';\r\nimport { UploadOutlined } from '@ant-design/icons';\r\nimport { Form as AntForm, Input, } from 'antd';\r\nimport { ref, uploadBytes } from \"firebase/storage\";\r\nimport { storage } from '../../components/firebase';\r\n\r\nconst ProfileUpload = () => {\r\n    let userObj = localStorage.getItem('user')\r\n    userObj = JSON.parse(userObj)\r\n\r\n    const [form] = AntForm.useForm();\r\n    // console.log('Success:', values.upload.file, values.upload.file.name);\r\n\r\n    const formItemLayout = {\r\n        labelCol: { span: 4 },\r\n        wrapperCol: { span: 14 }\r\n    };\r\n\r\n    const buttonItemLayout = {\r\n        wrapperCol: { span: 14, offset: 4 },\r\n    };\r\n\r\n    const onFinish = (values) => {\r\n        const file = values.upload[0].originFileObj;\r\n        console.log(file)\r\n        // let reader = new FileReader();\r\n        // reader.onload = (e) => {\r\n        //     const base64 = e.target.result;\r\n        //     form.resetFields();\r\n        // };\r\n        // reader.readAsDataURL(file.originFileObj);\r\n\r\n\r\n        // Points to the root reference\r\n        const storageRef = ref(storage);\r\n\r\n        // Points to 'images'\r\n        const imagesRef = ref(storageRef, 'images');\r\n\r\n        // Points to 'images/space.jpg'\r\n        // Note that you can use variables to create child values\r\n        const fileName = userObj.uid;\r\n        const spaceRef = ref(imagesRef, fileName);\r\n\r\n        // File path is 'images/space.jpg'\r\n        const path = spaceRef.fullPath;\r\n\r\n        // File name is 'space.jpg'\r\n        const name = spaceRef.name;\r\n\r\n        // Points to 'images'\r\n        const imagesRefAgain = spaceRef.parent;\r\n        console.log(imagesRefAgain)\r\n\r\n        const storageRef1 = ref(storage, userObj.uid);\r\n\r\n        // 'file' comes from the Blob or File API\r\n        uploadBytes(storageRef1, file).then((snapshot) => {\r\n            console.log('Uploaded a blob or file!');\r\n            onReset()\r\n        });\r\n\r\n\r\n    };\r\n\r\n    const onReset = () => {\r\n        form.resetFields();\r\n    };\r\n\r\n    const normFile = (e) => {\r\n        console.log('Upload event:', e);\r\n\r\n        if (Array.isArray(e)) {\r\n            return e;\r\n        }\r\n        return e && e.fileList;\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n\r\n            <AntForm\r\n                {...formItemLayout}\r\n                layout=\"horizontal\"\r\n                form={form}\r\n                name=\"control-hooks\"\r\n                onFinish={onFinish}\r\n            >\r\n                <AntForm.Item\r\n                    name=\"upload\"\r\n                    label=\"Upload\"\r\n                    valuePropName=\"fileList\"\r\n                    getValueFromEvent={normFile}\r\n                    \r\n                >\r\n                    <Upload name=\"logo\" listType=\"picture\" accept=\"image/*\" multiple={false}\r\n                        maxCount={1}>\r\n                        <Button icon={<UploadOutlined />}>Click to upload</Button>\r\n                    </Upload>\r\n                </AntForm.Item>\r\n                <AntForm.Item {...buttonItemLayout}>\r\n                    <Button type=\"primary\" htmlType=\"submit\" style={{ marginRight: '10px' }}>Submit</Button>\r\n\r\n\r\n                </AntForm.Item>\r\n            </AntForm>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileUpload\r\n",
        "import React, { useState, useEffect, useMemo } from 'react';\r\nimport { Typography } from 'antd';\r\nimport { HighlightOutlined, SmileOutlined, SmileFilled } from '@ant-design/icons';\r\nimport './settings.css'\r\nimport { doc, onSnapshot, setDoc } from \"firebase/firestore\";\r\nimport { db } from '../../components/firebase';\r\nimport { ref, getDownloadURL } from \"firebase/storage\";\r\nimport { storage } from '../../components/firebase';\r\n\r\nimport ProfileUpload from './ProfileUpload';\r\nconst { Paragraph } = Typography;\r\n\r\nconst SettingCard = () => {\r\n    let userObj = localStorage.getItem('user')\r\n    userObj = JSON.parse(userObj)\r\n\r\n    let uName;\r\n    let uEmail;\r\n    const [name, setName] = useState(uName);\r\n    const [email, setEmail] = useState(uEmail);\r\n    const [updateName, setUpdateName] = useState(name);\r\n    const [updateEmail, setUpdateEmail] = useState(email);\r\n    console.log(name, email)\r\n    console.log(uName, uEmail)\r\n    console.log(updateName, updateEmail)\r\n\r\n    const [imgURL, setImgURL] = useState('')\r\n    console.log(imgURL)\r\n    useEffect(() => {\r\n        const unsub = onSnapshot(doc(db, \"users\", `${userObj.uid}`), (doc) => {\r\n            if (doc.data()) {\r\n                uName = doc.data().name\r\n                uEmail = doc.data().email\r\n                setUpdateName(uName)\r\n                setUpdateEmail(uEmail)\r\n                setName(doc.data().name)\r\n                setEmail(doc.data().email)\r\n                console.log(\"Current data: \", doc.data())\r\n\r\n            }\r\n        });\r\n\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        getDownloadURL(ref(storage, userObj.uid))\r\n            .then((url) => {\r\n                // `url` is the download URL for 'images/stars.jpg'\r\n\r\n                // This can be downloaded directly:\r\n                const xhr = new XMLHttpRequest();\r\n                xhr.responseType = 'blob';\r\n                xhr.onload = (event) => {\r\n                    const blob = xhr.response;\r\n                };\r\n                xhr.open('GET', url);\r\n                xhr.send();\r\n\r\n                // Or inserted into an <img> element\r\n                // const img = document.getElementById('myimg');\r\n                // img.setAttribute('src', url);\r\n                setImgURL(url)\r\n                console.log(url)\r\n            })\r\n            .catch((error) => {\r\n                // Handle any errors\r\n                console.log(error)\r\n            });\r\n\r\n    }, [])\r\n\r\n\r\n\r\n    if (updateEmail) {\r\n\r\n        console.log('effects')\r\n        const usersRef = doc(db, 'users', `${userObj.uid}`);\r\n        setDoc(usersRef, { name: updateName, email: updateEmail }, { merge: true });\r\n        console.log('usememmonpm ')\r\n    }\r\n\r\n\r\n    return (\r\n        <div className='settingCardDiv'>\r\n\r\n            <img className='settingUserPic' alt=\"example\" src={imgURL} />\r\n            <div style={{ width: '100%', marginTop: 10 }}>\r\n                <ProfileUpload />\r\n                <Paragraph editable={{ onChange: setUpdateName }}>{updateName}</Paragraph>\r\n                <Paragraph editable={{ onChange: setUpdateEmail }}>{updateEmail}</Paragraph>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default SettingCard\r\n",
        "import React from 'react'\r\nimport Nav from '../../components/Nav/Nav'\r\nimport SettingCard from './SettingCard'\r\n\r\nconst Settings = () => {\r\n    return (\r\n        <div>\r\n          <Nav/>  \r\n          <SettingCard/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Settings\r\n",
        "import React from 'react'\r\nimport { render } from \"react-dom\";\r\nimport {\r\n    BrowserRouter,\r\n    Routes as BrowserRoutes,\r\n    Route\r\n} from \"react-router-dom\";\r\nimport SignIn from '../pages/signin/SignIn';\r\nimport Signup from '../pages/signup/Signup';\r\nimport Home from '../pages/home/Home';\r\nimport Settings from '../pages/settings/Settings';\r\n\r\nconst Routes = () => {\r\n    return (\r\n        <BrowserRouter>\r\n            <BrowserRoutes>\r\n                <Route path=\"/\" element={<SignIn />} />\r\n                <Route path=\"/signup\" element={<Signup />} />\r\n                <Route path=\"/home\" element={<Home />} />\r\n                <Route path=\"/settings\" element={<Settings />} />\r\n\r\n            </BrowserRoutes>\r\n        </BrowserRouter>\r\n    )\r\n}\r\n\r\nexport default Routes\r\n",
        "import React from \"react\";\r\n\r\nconst AuthContext = React.createContext({ isLoggedIn: false });\r\n\r\nexport default AuthContext;\r\n",
        "import logo from \"./logo.svg\";\r\nimport \"./App.css\";\r\nimport Routes from \"./routes/Routes\";\r\nimport AuthContext from \"./components/context/AuthContext\";\r\nimport { getAuth, onAuthStateChanged } from \"firebase/auth\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { auth } from \"./components/firebase\";\r\nimport CurentUserContext from \"./components/context/CurrentUserContext\";\r\n\r\nfunction App() {\r\n  const [firebseAuth, setFirebaseAuth] = useState({ isLoggedIn: false });\r\n  const [currentUser, setCurrentUser] = useState({})\r\n  useEffect(() => {\r\n\r\n    onAuthStateChanged(auth, (user) => {\r\n      setFirebaseAuth({ isLoggedIn: true });\r\n      console.log(user);\r\n      setCurrentUser(user)\r\n      // const uid = user.uid;\r\n      // localStorage.setItem('user', JSON.stringify(user))\r\n      // ...\r\n    });\r\n\r\n  }, [])\r\n\r\n  return (\r\n\r\n    <AuthContext.Provider value={firebseAuth}>\r\n      <CurentUserContext.Provider value={currentUser}>\r\n        <Routes />\r\n      </CurentUserContext.Provider>\r\n    </AuthContext.Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n",
        "const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n",
        "import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'antd/dist/antd.css';\r\n\r\nReactDOM.render(\r\n      <App />,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"
    ],
    "sourceRoot": ""
}